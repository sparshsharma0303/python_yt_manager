import json

def load_data():
    try:
        with open("youtube.txt",'r') as file:
            test = json.load(file)
            # print (type(test))
            return test


    except FileNotFoundError:
        return []

def save_data_helper(videos):
    with open("youtube.txt","w") as file:
        json.dump(videos, file)

def list_all_videos(videos):
    print("\n")
    for index, video in enumerate(videos, start=1):
        print("\n")
        print(f"{index}.{video['name']}, duration:  {video['time']}\n")

def add_video(videos):
    name = input("enter video name: \n")
    time = input("enter video time: \n")
    videos.append({'name': name, 'time':time})
    save_data_helper(videos)


def update_video_details(videos):
    list_all_videos(videos) 
    index = int(input("enter videos you want to update\n"))

    if 1<= index <= len(videos):

        name = input("enter the new name of video:\n")
        time = input("enter the new time of video:\n")
        videos[index-1] = { 'name': name,'time':time }
        save_data_helper(videos)
    else: 
        print("invalid index selected\n")



def delete_video(videos):
    list_all_videos(videos)
    index = int(input("enter the video index to be deleted:\n"))
    if 1<= index <= len(videos):    
        del videos[index-1]
        save_data_helper(videos)
    else:
        print("invalid index entered")
    


def main():
    videos = load_data()
    while True:
        print("\n youtube manager| choose an option ")
        print("1. list all youtube videos ")
        print("2. add youtube videos ")
        print("3. updater youtube video details ")
        print("4. delete a youtube video ")
        print("5. exit the app ")
        choice = input("enter you choice :\n")
        # print(videos)

        match choice:
            case '1':
                list_all_videos(videos)
        
            case '2':
                add_video(videos)
        
            case '3':
                update_video_details(videos)
        
            case '4':
                delete_video(videos)
        
            case '5':
                break
            
            case _:
                print("invalid choice")
 
if __name__ == "__main__":
    main()
